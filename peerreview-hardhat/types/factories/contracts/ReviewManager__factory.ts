/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ReviewManager,
  ReviewManagerInterface,
} from "../../contracts/ReviewManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paperId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "clearAvg",
        type: "uint32",
      },
    ],
    name: "AverageRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paperId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "encCommentCid",
        type: "string",
      },
    ],
    name: "ReviewSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paperId",
        type: "uint256",
      },
    ],
    name: "getAverage",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paperId",
        type: "uint256",
      },
    ],
    name: "getCount",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reviews",
    outputs: [
      {
        internalType: "bool",
        name: "reviewed",
        type: "bool",
      },
      {
        internalType: "string",
        name: "encCommentCid",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paperId",
        type: "uint256",
      },
      {
        internalType: "externalEuint8",
        name: "encryptedScore",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "encCommentCid",
        type: "string",
      },
    ],
    name: "submitReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b610d0f806101975f395ff3fe608060405234801561000f575f5ffd5b5060043610610064575f3560e01c8063c23539181161004d578063c2353918146100af578063da1f12ab146100ed578063e4557ffd146100f5575f5ffd5b8063732d161c14610068578063c12804fb1461008e575b5f5ffd5b61007b610076366004610972565b61010a565b6040519081526020015b60405180910390f35b6100a161009c366004610989565b6101ac565b6040516100859291906109f0565b6100d86100bd366004610972565b5f908152600160208190526040909120015463ffffffff1690565b60405163ffffffff9091168152602001610085565b61271161007b565b610108610103366004610a4f565b61025a565b005b5f81815260016020819052604082209081015463ffffffff1682036101765760405162461bcd60e51b815260206004820152600a60248201527f6e6f20726576696577730000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b805460018201545f9161018e9163ffffffff16610443565b905061019a813361046e565b506101a481610480565b509392505050565b5f6020818152928152604080822090935290815220805460018201805460ff90921692916101d990610ad1565b80601f016020809104026020016040519081016040528092919081815260200182805461020590610ad1565b80156102505780601f1061022757610100808354040283529160200191610250565b820191905f5260205f20905b81548152906001019060200180831161023357829003601f168201915b5050505050905082565b5f8681526020818152604080832033845290915290205460ff16156102c15760405162461bcd60e51b815260206004820152601060248201527f616c726561647920726576696577656400000000000000000000000000000000604482015260640161016d565b5f6103018686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061048f92505050565b5f888152600160205260409020805491925090610326906103218461049c565b6104a8565b8155600180820180545f9061034290849063ffffffff16610b09565b92506101000a81548163ffffffff021916908363ffffffff16021790555061036c815f0154610480565b50604051806040016040528060011515815260200185858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509390945250508a81526020818152604080832033845282529091208351815460ff19169015151781559083015190915060018201906103f19082610b91565b50905050336001600160a01b0316887ff0906d4d262a532d67cb5e02d3670754cf0804da22ebe7eae7b42feafebee15b8686604051610431929190610c4c565b60405180910390a35050505050505050565b5f82610455576104525f6104d6565b92505b6104658363ffffffff84166104e8565b90505b92915050565b5f61047983836105b7565b5090919050565b5f61048b82306105b7565b5090565b5f61046583836002610640565b5f610468826004610760565b5f826104ba576104b75f6104d6565b92505b816104cb576104c85f6104d6565b91505b61046583835f61081d565b5f6104688263ffffffff1660046108fd565b5f600160f81b817f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497006001810154604051635a53accb60e01b815260048101889052602481018790527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b031690635a53accb906064016020604051808303815f875af115801561058a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ae9190610c7a565b95945050505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610625575f5ffd5b505af1158015610637573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b906106b9908890339089908990600401610cb1565b6020604051808303815f875af11580156106d5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f99190610c7a565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610742575f5ffd5b505af1158015610754573d5f5f3e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516307227b9160e21b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690631c89ee44906107d59087908790600401610ce7565b6020604051808303815f875af11580156107f1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108159190610c7a565b949350505050565b5f5f82156108305750600160f81b610833565b505f5b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af11580156108cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f39190610c7a565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906107d59087908790600401610ce7565b5f60208284031215610982575f5ffd5b5035919050565b5f5f6040838503121561099a575f5ffd5b8235915060208301356001600160a01b03811681146109b7575f5ffd5b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f61081560408301846109c2565b5f5f83601f840112610a1a575f5ffd5b50813567ffffffffffffffff811115610a31575f5ffd5b602083019150836020828501011115610a48575f5ffd5b9250929050565b5f5f5f5f5f5f60808789031215610a64575f5ffd5b8635955060208701359450604087013567ffffffffffffffff811115610a88575f5ffd5b610a9489828a01610a0a565b909550935050606087013567ffffffffffffffff811115610ab3575f5ffd5b610abf89828a01610a0a565b979a9699509497509295939492505050565b600181811c90821680610ae557607f821691505b602082108103610b0357634e487b7160e01b5f52602260045260245ffd5b50919050565b63ffffffff818116838216019081111561046857634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b601f821115610b8c57805f5260205f20601f840160051c81016020851015610b6a5750805b601f840160051c820191505b81811015610b89575f8155600101610b76565b50505b505050565b815167ffffffffffffffff811115610bab57610bab610b31565b610bbf81610bb98454610ad1565b84610b45565b6020601f821160018114610bf1575f8315610bda5750848201515b5f19600385901b1c1916600184901b178455610b89565b5f84815260208120601f198516915b82811015610c205787850151825560209485019460019092019101610c00565b5084821015610c3d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f60208284031215610c8a575f5ffd5b5051919050565b60548110610cad57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f610cd860808301856109c2565b90506105ae6060830184610c91565b82815260408101610cfb6020830184610c91565b939250505056fea164736f6c634300081b000a";

type ReviewManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReviewManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReviewManager__factory extends ContractFactory {
  constructor(...args: ReviewManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReviewManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReviewManager__factory {
    return super.connect(runner) as ReviewManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReviewManagerInterface {
    return new Interface(_abi) as ReviewManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReviewManager {
    return new Contract(address, _abi, runner) as unknown as ReviewManager;
  }
}
